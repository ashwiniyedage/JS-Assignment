Day1 Assignment

1)Various console methods-
->The console object provides us with several different methods, like :

    1)log()
	Mainly used to log(print) the output to the console. 
	We can put any type inside the log(), be it a string, array, object, boolean etc.
	eg. console.log('abc');  

    2)error()
	Used to log error message to the console. 
	Useful in testing of code.
	By default the error message will be highlighted with red color.
	eg. console.error('This is a simple error'); 

    3)warn()
	Used to log warning message to the console.
 	By default the warning message will be highlighted with yellow color.
	eg. console.warn('This is a warning.');  

    4)clear()
	Used to clear the console. 
	eg. console.clear(); 

    5)time() and timeEnd()
	Whenever we want to know the amount of time spend by a block or a function,
	we can make use of the time() and timeEnd() methods provided by the 
	javascript console object. They take a label which must be same, 
	and the code inside can be anything( function, object, simple console).
	eg. 
		console.time('abc'); 
 		let fun =  function(){ 
     			console.log('fun is running'); 
		 } 
 		let fun2 = function(){ 
     			console.log('fun2 is running..'); 
		 } 
 		fun(); 
 		fun2();
		console.timeEnd('abc'); 

    6)table()
	This method allows us to generate a table inside a console. 
	The input must be an array or an object which will be shown as a table.
	eg. console.table({'a':1, 'b':2}); 

    7)count()
	This method is used to count the number that the function hit by this counting method.
	eg.for(let i=0;i<5;i++){ 
    	console.count(i); 
	}
 
    8)group() and groupEnd()
	group() and groupEnd() methods of the console object allows us to 
	group contents in a separate block, which will be indented.
	Just like the time() and the timeEnd() they also accepts label, again of same value.
	eg. 
console.group('simple'); 
  console.warn('warning!'); 
  console.error('error here'); 
  console.log('vivi vini vici'); 
console.groupEnd('simple'); 
console.log('new section'); 

    9)custom console logs
	User can add Styling to the console logs in order to make logs Custom . 
	The Syntax for it is to add the css styling as a parameter to the logs which
	 will replace %c in the logs as shown in the example below 
	eg. 
	const spacing = '10px'; 
  	const styles =  
        `padding: ${spacing}; background-color: white; color: green; font-style:  
         italic; border: 1px solid black; font-size: 2em;`; 
  	console.log('%cGeeks for Geeks', styles); 

2)Data Types:-
->1)string
  2)Number
  3)Boolean
  4)Undefined
  5)null
  6)Object
  7)Array 
  8)Function